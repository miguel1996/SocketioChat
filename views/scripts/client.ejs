<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.6/vue.min.js"> </script>

<script>
    var socket;
    
    jQuery(document).ready(function () {

        //in the beggining the chat is hidden and a login prompt is shown
        $("#chat").css('display', 'none');
        $("#login_form").css('display', 'block');


        socket = io.connect();
        var loginForm = $('#loginForm');
        var form = jQuery('#myForm');
        var txt = jQuery('#txt');
        var chatArea = jQuery('#chatArea');

        //when a new user enters or an existing onde exits
        socket.on('update', function (data) {
            handleNewUser(data);
        });

        //when someone clicks login
        loginForm.submit(function (e) {
            e.preventDefault();
            login();
        });

        //when someone send a message
        form.submit(function (e) {
            e.preventDefault();
            socket.emit('sending message', {message:txt.val(),target:$('#chatTarget').attr('value')});
            txt.val('');

            $([document.documentElement, document.body]).animate({
                scrollTop: $("#send_message_button").offset().top
            }, 1);
        });

        //a new message on the general chat
        socket.on('new message', function (data) {
            if($("#chatTarget").attr('value') === 'general')
            {
                writeInChatArea(data.socket, data.message, Date.now());
                scrollToBottom();
            }
        });

        socket.on('private', function (data) {
            if(data.target === $('#chatTarget').attr('value') || data.sender === $('#chatTarget').attr('value'))
            {
                writeInChatArea(data.sender, data.message, Date.now());
                scrollToBottom();
            }
            // chatArea.append('<div class="well">TEST:' + data.socket + ': ' + data.message + '</div>');
        });

        socket.on('auth', function (data) {
            if (data.message === 'sucess') {
                $("#chat").css('display', 'block');
                $("#login_form").css('display', 'none');
                $("#main_header").html("Welcome home, " + data.user_name + "!");
                insertLastMessages(data.lastMessages);
                var emojis = ["&#x1F600", "&#x1F604", "&#x1F34A", "&#x1F344", "&#x1F37F", "&#x1F363", "&#x1F370", "&#x1F355", "&#x1F354", "&#x1F35F", "&#x1F6C0", "&#x1F48E", "&#x1F5FA", "&#x23F0", "&#x1F579", "&#x1F4DA", "&#x1F431", "&#x1F42A", "&#x1F439", "&#x1F424"];
                var list = $("#list"); 
                var element = 0;
                var rows = 4;
                var columns = 5;
                for(j = 0; j < rows; j++){
                    list.append("<tr>");
                    for(i = 0; i < columns; i++){
                        
                        list.append("<td class='emoji' id='"+emojis[element]+"'>"+emojis[element]+"</td>");
                        element++;
                    }
                    list.append("</tr>");
                }
                
            } else {
                // alert(data.message);
                $('#failed-login').css('display', 'inline');
                console.log(data.message);
                var app = new Vue({
                    el: '#failed-login',

                    data: {
                        msg: data.message,
                        test: data.message
                    }
                });
            }
        });

        socket.on('last public messages', function (data) {
            if (data.message === 'sucess') {
                insertLastMessages(data.lastMessages);
            }
        });


        $('#users').click(function(event){
            //when the user changes the user_name to talk to, onyl the one he selected will be in bold
            $('#users').find('*').css('font-weight','normal');
            $(event.target).css('font-weight','bold');
            clearChatArea();
            //the chatTarget var is now updated to correspond to the user in bold
            $('#chatTarget').attr('value',$(event.target).attr('value'));
            //console.log('clicked='+$(event.target).attr('value'));
            socket.emit('requesting last messages', {target:$('#chatTarget').attr('value')});
        });

        $('#list').click(function(event){
            console.log($(event.target).attr('id'));
            $("#txt").val($("#txt").val() + $(event.target).attr('id')).focus();
        });

    });

    //when the user clicks login
    function login() {
        let user_name = $("#user_name").val();
        let password = $("#password").val();
        socket.emit('join', { user_name, password});

    }

    function getHashColor(string){
        // console.log(string);
        var hash="";
        string = string.toUpperCase();

        for(i = 0; i < 5; i = i + 2){

            var value = (string.charCodeAt(i%(string.length))+string.charCodeAt((i+1)%(string.length))-130)*255/50;
            // console.log("before:"+value);
            value = Math.round(value);
            value = value.toString(16);
            if(value.length < 2){
                value = "0" + value;
            }
            // console.log(value);
            hash = hash + value.toString(16);
        }
        // console.log(hash);
        return hash;
    }

    //handles when a new user enters or an existing one exits
    function handleNewUser(data) {
        var usersArea = jQuery('#users');
        var conns = data.connections;
        usersArea.html('');
        //font weight ta mal
        usersArea.append('<div class="well chat" value="general" id="general">General chat</div>');
        
        for (var key in conns) {
            color = getHashColor(conns[key]);
            // console.log(complement);
            usersArea.append('<div class="well chat" style="background-color:#'+color+';" value="'+conns[key]+'" id="'+conns[key]+'">'+conns[key] + '</div>');
            

        }
        let chatTargetVal = $("#chatTarget").attr('value');
        $("#"+chatTargetVal).css('font-weight','bold');
        $('#chatArea').append('<div class="well">' + data.message.welcome + '</div>');
        
        // return conns[last];
    }

    function insertLastMessages(lastMessages) {
        lastMessages.reverse();
        for (let index = 0; index < lastMessages.length; index++) {
            writeInChatArea(lastMessages[index].user_name,lastMessages[index].details,lastMessages[index].timestamp);
        }
    }

    function writeInChatArea(user, message, tmsp)
    {
        let date = new Date(tmsp);
        let hour = date.getHours()+'h';
        let minutes = date.getMinutes()+'m';
        let seconds = date.getSeconds()+'s';
        let dateFormatted = hour + minutes + seconds;
        var color = getHashColor(user);
        $('#chatArea').append('<div class="well" style="background-color:#'+color+'">' + '<span class="user">'+ dateFormatted + ' <span class="highlight">' +user + '</span>: ' + message + '</span></div>');
    }

    function clearChatArea(){
        $('#chatArea').html('');
    }

    function scrollToBottom() {
        //  
        $("#chatArea").scrollTop($("#chatArea").prop("scrollHeight"));
        // console.log($('#chatArea').prop('scrollHeight'));
    }

    

</script>